<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2015-2017 Hewlett Packard Enterprise Development LP.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.github.cafdataprocessing</groupId>
        <artifactId>boilerplate-service-aggregator</artifactId>
        <version>2.1.0-SNAPSHOT</version>
    </parent>

    <groupId>com.github.cafdataprocessing</groupId>
    <artifactId>worker-boilerplate</artifactId>

    <properties>
        <db.name>boilerplate</db.name>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.github.cafapi</groupId>
            <artifactId>caf-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.workerframework</groupId>
            <artifactId>worker-caf</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.cafapi.util</groupId>
            <artifactId>util-ref</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.cafdataprocessing</groupId>
            <artifactId>worker-boilerplate-shared</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.hpe.caf.boilerplate</groupId>
            <artifactId>boilerplate-web-caller</artifactId>
            <version>1.14.1-68</version>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-annotations</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.ws.rs</groupId>
                    <artifactId>jsr311-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.github.cafdataprocessing</groupId>
            <artifactId>util-email-content-segregation</artifactId>
            <version>2.0.0-5</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.cafapi.codec</groupId>
            <artifactId>codec-json</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>jsr311-api</artifactId>
            <scope>test</scope>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.web</groupId>
            <artifactId>el-impl</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.workerframework</groupId>
            <artifactId>worker-store-fs</artifactId>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <!-- profile that includes the necessary worker dependencies to launch this worker -->
            <id>local-debug</id>
            <dependencies>
                <dependency>
                    <groupId>com.github.cafapi.cipher</groupId>
                    <artifactId>cipher-null</artifactId>
                </dependency>
                <dependency>
                    <groupId>com.github.cafapi.config</groupId>
                    <artifactId>config-file</artifactId>
                </dependency>
                <dependency>
                    <groupId>com.github.cafapi.codec</groupId>
                    <artifactId>codec-json</artifactId>
                </dependency>
                <dependency>
                    <groupId>com.github.workerframework</groupId>
                    <artifactId>worker-queue-rabbit</artifactId>
                </dependency>
                <dependency>
                    <groupId>com.github.workerframework</groupId>
                    <artifactId>worker-core</artifactId>
                </dependency>
                <dependency>
                    <groupId>com.github.cafapi</groupId>
                    <artifactId>caf-api</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>integration-test</id>
            <activation>
                <property>
                    <name>RE_BUILD_TYPE</name>
                    <value>continuous</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${fabric8.docker.maven.version}</version>
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>build</goal>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>use-default-fixed-ports</id>
            <properties>
                <boilerplate.adminport>5555</boilerplate.adminport>
                <postgres.db.port>5432</postgres.db.port>
                <db.connection>jdbc:postgresql://boilerplate-integrationtests-postgres:${postgres.db.port}
                </db.connection>
            </properties>
        </profile>

        <profile>
            <id>nightly-test</id>
            <activation>
                <property>
                    <name>RE_BUILD_TYPE</name>
                    <value>release</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${maven.failsafe.version}</version>
                        <configuration>
                            <!--Test are run in boilerplate-service build, and should be skipped in nightly build -->
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!--<profile>-->
        <!--<id>release-profile</id>-->
        <!--<activation>-->

        <!--</activation>-->
        <!--<properties>-->
        <!--<deployFileUrl>${project.distributionManagement.repository.url}</deployFileUrl>-->
        <!--<repositoryId>${project.distributionManagement.repository.id}</repositoryId>-->
        <!--</properties>-->
        <!--</profile>-->
    </profiles>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.failsafe.version}</version>
                <executions>
                    <execution>
                        <id>api-web-Docker</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <systemPropertyVariables>
                        <boilerplate.adminport>${boilerplate.adminport}</boilerplate.adminport>
                        <docker.host.address>${docker.host.address}</docker.host.address>
                        <postgres.db.port>${postgres.db.port}</postgres.db.port>
                    </systemPropertyVariables>
                    <environmentVariables>
                        <hibernate.connectionstring>
                            jdbc:postgresql://boilerplate-integrationtests-postgres:${postgres.db.port}/${db.name}
                        </hibernate.connectionstring>
                        <hibernate.user>postgres</hibernate.user>
                        <hibernate.password>root</hibernate.password>
                        <webserviceurl>http://${docker.host.address}:${boilerplate.adminport}/boilerplateapi
                        </webserviceurl>
                    </environmentVariables>
                    <!--<debugForkedProcess>true</debugForkedProcess>-->
                </configuration>

            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${fabric8.docker.maven.version}</version>
                <configuration>
                    <verbose>true</verbose>
                    <autoPull>always</autoPull>
                    <logDate>default</logDate>

                    <images>
                        <!-- pull in a normal postgres DB -->
                        <image>
                            <alias>boilerplate-integrationtests-postgres</alias>
                            <name>index.docker.io/postgres:9.4</name>
                            <run>
                                <ports>
                                    <port>${postgres.db.port}:5432</port>
                                </ports>
                                <env>
                                    <POSTGRES_PASSWORD>root</POSTGRES_PASSWORD>
                                    <POSTGRES_USER>postgres</POSTGRES_USER>
                                    <POSTGRES_DB>${db.name}</POSTGRES_DB>
                                </env>
                                <wait>
                                    <log>PostgreSQL init process complete</log>
                                    <time>20000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                            </run>
                        </image>

                        <image>
                            <alias>boilerplate-liquibase-container</alias>
                            <name>cafinternal/prereleases:boilerplate-db-installer-${project.version}</name>
                            <run>
                                <links>
                                    <link>boilerplate-integrationtests-postgres</link>
                                </links>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                                <cmd>java -jar /boilerplate-db.jar -fd -db.user postgres -db.pass root -db.name
                                    ${db.name} -db.connection
                                    jdbc:postgresql://boilerplate-integrationtests-postgres:5432 -log debug
                                </cmd>
                                <wait>
                                    <log>DB update finished.</log>
                                    <time>60000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                            </run>
                        </image>
                        <image>
                            <alias>boilerplate-api-container</alias>
                            <name>cafinternal/prereleases:boilerplate-api-${project.version}</name>
                            <run>
                                <links>
                                    <link>boilerplate-integrationtests-postgres</link>
                                </links>
                                <ports>
                                    <port>${boilerplate.adminport}:8080</port>
                                </ports>
                                <env>
                                    <hibernate.connectionstring>
                                        jdbc:postgresql://boilerplate-integrationtests-postgres:5432/${db.name}
                                    </hibernate.connectionstring>
                                    <hibernate.user>postgres</hibernate.user>
                                    <hibernate.password>root</hibernate.password>
                                </env>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                                <wait>
                                    <http>
                                        <url>
                                            http://${docker.host.address}:${boilerplate.adminport}/boilerplateapi/boilerplate/checkhealth?project_id=1
                                        </url>
                                    </http>
                                    <time>120000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
